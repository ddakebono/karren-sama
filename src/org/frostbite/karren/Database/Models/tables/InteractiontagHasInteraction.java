/**
 * This class is generated by jOOQ
 */
package org.frostbite.karren.Database.Models.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.frostbite.karren.Database.Models.Karrendb;
import org.frostbite.karren.Database.Models.Keys;
import org.frostbite.karren.Database.Models.tables.records.InteractiontagHasInteractionRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InteractiontagHasInteraction extends TableImpl<InteractiontagHasInteractionRecord> {

	private static final long serialVersionUID = -985406235;

	/**
	 * The reference instance of <code>KarrenDB.InteractionTag_has_Interaction</code>
	 */
	public static final InteractiontagHasInteraction INTERACTIONTAG_HAS_INTERACTION = new InteractiontagHasInteraction();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<InteractiontagHasInteractionRecord> getRecordType() {
		return InteractiontagHasInteractionRecord.class;
	}

	/**
	 * The column <code>KarrenDB.InteractionTag_has_Interaction.TagID</code>.
	 */
	public final TableField<InteractiontagHasInteractionRecord, Integer> TAGID = createField("TagID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>KarrenDB.InteractionTag_has_Interaction.InteractionID</code>.
	 */
	public final TableField<InteractiontagHasInteractionRecord, Integer> INTERACTIONID = createField("InteractionID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>KarrenDB.InteractionTag_has_Interaction</code> table reference
	 */
	public InteractiontagHasInteraction() {
		this("InteractionTag_has_Interaction", null);
	}

	/**
	 * Create an aliased <code>KarrenDB.InteractionTag_has_Interaction</code> table reference
	 */
	public InteractiontagHasInteraction(String alias) {
		this(alias, INTERACTIONTAG_HAS_INTERACTION);
	}

	private InteractiontagHasInteraction(String alias, Table<InteractiontagHasInteractionRecord> aliased) {
		this(alias, aliased, null);
	}

	private InteractiontagHasInteraction(String alias, Table<InteractiontagHasInteractionRecord> aliased, Field<?>[] parameters) {
		super(alias, Karrendb.KARRENDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<InteractiontagHasInteractionRecord> getPrimaryKey() {
		return Keys.KEY_INTERACTIONTAG_HAS_INTERACTION_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<InteractiontagHasInteractionRecord>> getKeys() {
		return Arrays.<UniqueKey<InteractiontagHasInteractionRecord>>asList(Keys.KEY_INTERACTIONTAG_HAS_INTERACTION_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<InteractiontagHasInteractionRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<InteractiontagHasInteractionRecord, ?>>asList(Keys.FK_INTERACTIONTAG_HAS_INTERACTION_INTERACTIONTAG1, Keys.FK_INTERACTIONTAG_HAS_INTERACTION_INTERACTION1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InteractiontagHasInteraction as(String alias) {
		return new InteractiontagHasInteraction(alias, this);
	}

	/**
	 * Rename this table
	 */
	public InteractiontagHasInteraction rename(String name) {
		return new InteractiontagHasInteraction(name, null);
	}
}
