/**
 * This class is generated by jOOQ
 */
package org.frostbite.karren.Database.Models.tables;

import org.frostbite.karren.Database.Models.Database;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Users extends org.jooq.impl.TableImpl<org.frostbite.karren.Database.Models.tables.records.UsersRecord> {

	/**
	 * The singleton instance of <code>database.users</code>
	 */
	public static final org.frostbite.karren.Database.Models.tables.Users USERS = new org.frostbite.karren.Database.Models.tables.Users();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.frostbite.karren.Database.Models.tables.records.UsersRecord> getRecordType() {
		return org.frostbite.karren.Database.Models.tables.records.UsersRecord.class;
	}

	/**
	 * The column <code>database.users.IRCUserID</code>.
	 */
	public final org.jooq.TableField<org.frostbite.karren.Database.Models.tables.records.UsersRecord, java.lang.Integer> IRCUSERID = createField("IRCUserID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>database.users.user</code>.
	 */
	public final org.jooq.TableField<org.frostbite.karren.Database.Models.tables.records.UsersRecord, java.lang.String> USER = createField("user", org.jooq.impl.SQLDataType.CLOB.length(65535).nullable(false), this, "");

	/**
	 * The column <code>database.users.botpart</code>.
	 */
	public final org.jooq.TableField<org.frostbite.karren.Database.Models.tables.records.UsersRecord, java.lang.Byte> BOTPART = createField("botpart", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>database.users.timepart</code>.
	 */
	public final org.jooq.TableField<org.frostbite.karren.Database.Models.tables.records.UsersRecord, java.lang.Long> TIMEPART = createField("timepart", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * Create a <code>database.users</code> table reference
	 */
	public Users() {
		this("users", null);
	}

	/**
	 * Create an aliased <code>database.users</code> table reference
	 */
	public Users(java.lang.String alias) {
		this(alias, org.frostbite.karren.Database.Models.tables.Users.USERS);
	}

	private Users(java.lang.String alias, org.jooq.Table<org.frostbite.karren.Database.Models.tables.records.UsersRecord> aliased) {
		this(alias, aliased, null);
	}

	private Users(java.lang.String alias, org.jooq.Table<org.frostbite.karren.Database.Models.tables.records.UsersRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, Database.DATABASE, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<org.frostbite.karren.Database.Models.tables.records.UsersRecord, java.lang.Integer> getIdentity() {
		return org.frostbite.karren.Database.Models.Keys.IDENTITY_USERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.frostbite.karren.Database.Models.tables.records.UsersRecord> getPrimaryKey() {
		return org.frostbite.karren.Database.Models.Keys.KEY_USERS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.frostbite.karren.Database.Models.tables.records.UsersRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.frostbite.karren.Database.Models.tables.records.UsersRecord>>asList(org.frostbite.karren.Database.Models.Keys.KEY_USERS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.frostbite.karren.Database.Models.tables.Users as(java.lang.String alias) {
		return new org.frostbite.karren.Database.Models.tables.Users(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.frostbite.karren.Database.Models.tables.Users rename(java.lang.String name) {
		return new org.frostbite.karren.Database.Models.tables.Users(name, null);
	}
}
