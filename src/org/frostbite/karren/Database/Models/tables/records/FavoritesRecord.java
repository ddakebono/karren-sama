/**
 * This class is generated by jOOQ
 */
package org.frostbite.karren.Database.Models.tables.records;


import javax.annotation.Generated;

import org.frostbite.karren.Database.Models.tables.Favorites;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FavoritesRecord extends UpdatableRecordImpl<FavoritesRecord> implements Record3<Integer, Integer, Long> {

	private static final long serialVersionUID = 419547727;

	/**
	 * Setter for <code>KarrenDB.Favorites.FaveID</code>.
	 */
	public void setFaveid(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>KarrenDB.Favorites.FaveID</code>.
	 */
	public Integer getFaveid() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>KarrenDB.Favorites.SongID</code>.
	 */
	public void setSongid(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>KarrenDB.Favorites.SongID</code>.
	 */
	public Integer getSongid() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>KarrenDB.Favorites.UserID</code>.
	 */
	public void setUserid(Long value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>KarrenDB.Favorites.UserID</code>.
	 */
	public Long getUserid() {
		return (Long) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Long> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Long> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Favorites.FAVORITES.FAVEID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Favorites.FAVORITES.SONGID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field3() {
		return Favorites.FAVORITES.USERID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getFaveid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getSongid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value3() {
		return getUserid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FavoritesRecord value1(Integer value) {
		setFaveid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FavoritesRecord value2(Integer value) {
		setSongid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FavoritesRecord value3(Long value) {
		setUserid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FavoritesRecord values(Integer value1, Integer value2, Long value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached FavoritesRecord
	 */
	public FavoritesRecord() {
		super(Favorites.FAVORITES);
	}

	/**
	 * Create a detached, initialised FavoritesRecord
	 */
	public FavoritesRecord(Integer faveid, Integer songid, Long userid) {
		super(Favorites.FAVORITES);

		setValue(0, faveid);
		setValue(1, songid);
		setValue(2, userid);
	}
}
