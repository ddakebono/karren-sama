/**
 * This class is generated by jOOQ
 */
package org.frostbite.karren.Database.Models.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.frostbite.karren.Database.Models.tables.User;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record8<Long, Timestamp, String, String, Integer, String, Byte, Timestamp> {

	private static final long serialVersionUID = -780068637;

	/**
	 * Setter for <code>KarrenDB.User.UserID</code>.
	 */
	public void setUserid(Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>KarrenDB.User.UserID</code>.
	 */
	public Long getUserid() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>KarrenDB.User.TimeLeft</code>.
	 */
	public void setTimeleft(Timestamp value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>KarrenDB.User.TimeLeft</code>.
	 */
	public Timestamp getTimeleft() {
		return (Timestamp) getValue(1);
	}

	/**
	 * Setter for <code>KarrenDB.User.DJName</code>.
	 */
	public void setDjname(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>KarrenDB.User.DJName</code>.
	 */
	public String getDjname() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>KarrenDB.User.DJPicture</code>.
	 */
	public void setDjpicture(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>KarrenDB.User.DJPicture</code>.
	 */
	public String getDjpicture() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>KarrenDB.User.DJActive</code>.
	 */
	public void setDjactive(Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>KarrenDB.User.DJActive</code>.
	 */
	public Integer getDjactive() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>KarrenDB.User.DJStreamName</code>.
	 */
	public void setDjstreamname(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>KarrenDB.User.DJStreamName</code>.
	 */
	public String getDjstreamname() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>KarrenDB.User.IgnoreCommands</code>.
	 */
	public void setIgnorecommands(Byte value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>KarrenDB.User.IgnoreCommands</code>.
	 */
	public Byte getIgnorecommands() {
		return (Byte) getValue(6);
	}

	/**
	 * Setter for <code>KarrenDB.User.RoleTimeout</code>.
	 */
	public void setRoletimeout(Timestamp value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>KarrenDB.User.RoleTimeout</code>.
	 */
	public Timestamp getRoletimeout() {
		return (Timestamp) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<Long, Timestamp, String, String, Integer, String, Byte, Timestamp> fieldsRow() {
		return (Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<Long, Timestamp, String, String, Integer, String, Byte, Timestamp> valuesRow() {
		return (Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return User.USER.USERID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field2() {
		return User.USER.TIMELEFT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return User.USER.DJNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return User.USER.DJPICTURE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return User.USER.DJACTIVE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return User.USER.DJSTREAMNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field7() {
		return User.USER.IGNORECOMMANDS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field8() {
		return User.USER.ROLETIMEOUT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getUserid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value2() {
		return getTimeleft();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getDjname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getDjpicture();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getDjactive();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getDjstreamname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value7() {
		return getIgnorecommands();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value8() {
		return getRoletimeout();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value1(Long value) {
		setUserid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value2(Timestamp value) {
		setTimeleft(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value3(String value) {
		setDjname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value4(String value) {
		setDjpicture(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value5(Integer value) {
		setDjactive(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value6(String value) {
		setDjstreamname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value7(Byte value) {
		setIgnorecommands(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value8(Timestamp value) {
		setRoletimeout(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord values(Long value1, Timestamp value2, String value3, String value4, Integer value5, String value6, Byte value7, Timestamp value8) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached UserRecord
	 */
	public UserRecord() {
		super(User.USER);
	}

	/**
	 * Create a detached, initialised UserRecord
	 */
	public UserRecord(Long userid, Timestamp timeleft, String djname, String djpicture, Integer djactive, String djstreamname, Byte ignorecommands, Timestamp roletimeout) {
		super(User.USER);

		setValue(0, userid);
		setValue(1, timeleft);
		setValue(2, djname);
		setValue(3, djpicture);
		setValue(4, djactive);
		setValue(5, djstreamname);
		setValue(6, ignorecommands);
		setValue(7, roletimeout);
	}
}
