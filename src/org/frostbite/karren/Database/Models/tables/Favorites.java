/**
 * This class is generated by jOOQ
 */
package org.frostbite.karren.Database.Models.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.frostbite.karren.Database.Models.Karrendb;
import org.frostbite.karren.Database.Models.Keys;
import org.frostbite.karren.Database.Models.tables.records.FavoritesRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Favorites extends TableImpl<FavoritesRecord> {

	private static final long serialVersionUID = 1795391154;

	/**
	 * The reference instance of <code>KarrenDB.Favorites</code>
	 */
	public static final Favorites FAVORITES = new Favorites();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FavoritesRecord> getRecordType() {
		return FavoritesRecord.class;
	}

	/**
	 * The column <code>KarrenDB.Favorites.FaveID</code>.
	 */
	public final TableField<FavoritesRecord, Integer> FAVEID = createField("FaveID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>KarrenDB.Favorites.SongID</code>.
	 */
	public final TableField<FavoritesRecord, Integer> SONGID = createField("SongID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>KarrenDB.Favorites.UserID</code>.
	 */
	public final TableField<FavoritesRecord, Long> USERID = createField("UserID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * Create a <code>KarrenDB.Favorites</code> table reference
	 */
	public Favorites() {
		this("Favorites", null);
	}

	/**
	 * Create an aliased <code>KarrenDB.Favorites</code> table reference
	 */
	public Favorites(String alias) {
		this(alias, FAVORITES);
	}

	private Favorites(String alias, Table<FavoritesRecord> aliased) {
		this(alias, aliased, null);
	}

	private Favorites(String alias, Table<FavoritesRecord> aliased, Field<?>[] parameters) {
		super(alias, Karrendb.KARRENDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<FavoritesRecord, Integer> getIdentity() {
		return Keys.IDENTITY_FAVORITES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<FavoritesRecord> getPrimaryKey() {
		return Keys.KEY_FAVORITES_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<FavoritesRecord>> getKeys() {
		return Arrays.<UniqueKey<FavoritesRecord>>asList(Keys.KEY_FAVORITES_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<FavoritesRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<FavoritesRecord, ?>>asList(Keys.FK_FAVORITES_SONGDB, Keys.FK_FAVORITES_USER);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Favorites as(String alias) {
		return new Favorites(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Favorites rename(String name) {
		return new Favorites(name, null);
	}
}
