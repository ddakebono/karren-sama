/**
 * This class is generated by jOOQ
 */
package org.frostbite.karren.Database.Models.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.frostbite.karren.Database.Models.Karrendb;
import org.frostbite.karren.Database.Models.Keys;
import org.frostbite.karren.Database.Models.tables.records.UserRecord;
import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class User extends TableImpl<UserRecord> {

	private static final long serialVersionUID = -661746356;

	/**
	 * The reference instance of <code>KarrenDB.User</code>
	 */
	public static final User USER = new User();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UserRecord> getRecordType() {
		return UserRecord.class;
	}

	/**
	 * The column <code>KarrenDB.User.UserID</code>.
	 */
	public final TableField<UserRecord, Long> USERID = createField("UserID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>KarrenDB.User.TimeLeft</code>.
	 */
	public final TableField<UserRecord, Timestamp> TIMELEFT = createField("TimeLeft", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>KarrenDB.User.DJName</code>.
	 */
	public final TableField<UserRecord, String> DJNAME = createField("DJName", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>KarrenDB.User.DJPicture</code>.
	 */
	public final TableField<UserRecord, String> DJPICTURE = createField("DJPicture", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>KarrenDB.User.DJActive</code>.
	 */
	public final TableField<UserRecord, Integer> DJACTIVE = createField("DJActive", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>KarrenDB.User.DJStreamName</code>.
	 */
	public final TableField<UserRecord, String> DJSTREAMNAME = createField("DJStreamName", org.jooq.impl.SQLDataType.VARCHAR.length(100).defaulted(true), this, "");

	/**
	 * The column <code>KarrenDB.User.IgnoreCommands</code>.
	 */
	public final TableField<UserRecord, Byte> IGNORECOMMANDS = createField("IgnoreCommands", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>KarrenDB.User</code> table reference
	 */
	public User() {
		this("User", null);
	}

	/**
	 * Create an aliased <code>KarrenDB.User</code> table reference
	 */
	public User(String alias) {
		this(alias, USER);
	}

	private User(String alias, Table<UserRecord> aliased) {
		this(alias, aliased, null);
	}

	private User(String alias, Table<UserRecord> aliased, Field<?>[] parameters) {
		super(alias, Karrendb.KARRENDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<UserRecord> getPrimaryKey() {
		return Keys.KEY_USER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<UserRecord>> getKeys() {
		return Arrays.<UniqueKey<UserRecord>>asList(Keys.KEY_USER_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public User as(String alias) {
		return new User(alias, this);
	}

	/**
	 * Rename this table
	 */
	public User rename(String name) {
		return new User(name, null);
	}
}
