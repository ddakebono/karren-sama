/**
 * This class is generated by jOOQ
 */
package org.frostbite.karren.Database.Models.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.frostbite.karren.Database.Models.Karrendb;
import org.frostbite.karren.Database.Models.Keys;
import org.frostbite.karren.Database.Models.tables.records.SongdbRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Songdb extends TableImpl<SongdbRecord> {

	private static final long serialVersionUID = 711998086;

	/**
	 * The reference instance of <code>KarrenDB.songdb</code>
	 */
	public static final Songdb SONGDB = new Songdb();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SongdbRecord> getRecordType() {
		return SongdbRecord.class;
	}

	/**
	 * The column <code>KarrenDB.songdb.ID</code>.
	 */
	public final TableField<SongdbRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>KarrenDB.songdb.SongTitle</code>.
	 */
	public final TableField<SongdbRecord, String> SONGTITLE = createField("SongTitle", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>KarrenDB.songdb.LPTime</code>.
	 */
	public final TableField<SongdbRecord, Long> LPTIME = createField("LPTime", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>KarrenDB.songdb.PlayCount</code>.
	 */
	public final TableField<SongdbRecord, Integer> PLAYCOUNT = createField("PlayCount", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>KarrenDB.songdb.FavCount</code>.
	 */
	public final TableField<SongdbRecord, Integer> FAVCOUNT = createField("FavCount", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>KarrenDB.songdb.songduration</code>.
	 */
	public final TableField<SongdbRecord, Long> SONGDURATION = createField("songduration", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>KarrenDB.songdb.durationlock</code>.
	 */
	public final TableField<SongdbRecord, Byte> DURATIONLOCK = createField("durationlock", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * Create a <code>KarrenDB.songdb</code> table reference
	 */
	public Songdb() {
		this("songdb", null);
	}

	/**
	 * Create an aliased <code>KarrenDB.songdb</code> table reference
	 */
	public Songdb(String alias) {
		this(alias, SONGDB);
	}

	private Songdb(String alias, Table<SongdbRecord> aliased) {
		this(alias, aliased, null);
	}

	private Songdb(String alias, Table<SongdbRecord> aliased, Field<?>[] parameters) {
		super(alias, Karrendb.KARRENDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<SongdbRecord, Integer> getIdentity() {
		return Keys.IDENTITY_SONGDB;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<SongdbRecord> getPrimaryKey() {
		return Keys.KEY_SONGDB_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<SongdbRecord>> getKeys() {
		return Arrays.<UniqueKey<SongdbRecord>>asList(Keys.KEY_SONGDB_PRIMARY, Keys.KEY_SONGDB_SONGTITLE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Songdb as(String alias) {
		return new Songdb(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Songdb rename(String name) {
		return new Songdb(name, null);
	}
}
